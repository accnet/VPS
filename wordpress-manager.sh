#!/bin/bash

LEMP_INSTALLED_FLAG="/var/local/lemp_installed.flag"
PHP_VERSION="8.2"

function install_lemp() {
    echo "üì¶ G·ª° apache2 n·∫øu c√≥..."
    sudo systemctl stop apache2 2>/dev/null
    sudo systemctl disable apache2 2>/dev/null
    sudo apt remove --purge apache2 apache2-utils apache2-bin -y
    sudo apt autoremove -y
    sudo apt-mark hold apache2 apache2-bin

    echo "üì¶ C√†i ƒë·∫∑t LEMP stack..."
    sudo apt update && sudo apt upgrade -y
    sudo apt install -y software-properties-common
    sudo add-apt-repository ppa:ondrej/php -y
    sudo apt update

    sudo apt install -y nginx mariadb-server php$PHP_VERSION php$PHP_VERSION-fpm php$PHP_VERSION-mysql \
        php$PHP_VERSION-curl php$PHP_VERSION-xml php$PHP_VERSION-mbstring php$PHP_VERSION-zip unzip wget curl

    echo "üõ†Ô∏è TƒÉng c·∫•u h√¨nh PHP..."
    sudo sed -i 's/^upload_max_filesize = .*/upload_max_filesize = 512M/' /etc/php/$PHP_VERSION/fpm/php.ini
    sudo sed -i 's/^post_max_size = .*/post_max_size = 512M/' /etc/php/$PHP_VERSION/fpm/php.ini
    sudo sed -i 's/^max_execution_time = .*/max_execution_time = 300/' /etc/php/$PHP_VERSION/fpm/php.ini
    sudo sed -i 's/^max_input_time = .*/max_input_time = 300/' /etc/php/$PHP_VERSION/fpm/php.ini
    sudo sed -i 's/^memory_limit = .*/memory_limit = 1024M/' /etc/php/$PHP_VERSION/fpm/php.ini

    if ! grep -q "client_max_body_size" /etc/nginx/nginx.conf; then
        sudo sed -i '/http {/a \    client_max_body_size 512M;' /etc/nginx/nginx.conf
    fi

    sudo systemctl restart php$PHP_VERSION-fpm
    sudo systemctl enable nginx mariadb php$PHP_VERSION-fpm
    sudo touch "$LEMP_INSTALLED_FLAG"
    echo "‚úÖ Ho√†n t·∫•t c√†i LEMP stack"
}

function add_site() {
    read -p "üåê Nh·∫≠p domain (VD: site1.local): " DOMAIN
    DB_NAME="${DOMAIN//./_}_db"
    DB_USER="${DOMAIN//./_}_user"
    DB_PASS=$(openssl rand -base64 12)
    WEBROOT="/var/www/$DOMAIN"

    read -p "üë§ Nh·∫≠p t√™n t√†i kho·∫£n admin (m·∫∑c ƒë·ªãnh: admin): " ADMIN_USER
    read -p "‚úâÔ∏è  Nh·∫≠p email admin (m·∫∑c ƒë·ªãnh: admin@$DOMAIN): " ADMIN_EMAIL
    read -s -p "üîë Nh·∫≠p m·∫≠t kh·∫©u admin (Enter ƒë·ªÉ t·∫°o ng·∫´u nhi√™n): " ADMIN_PASS_INPUT
    echo ""

    ADMIN_USER=${ADMIN_USER:-admin}
    ADMIN_EMAIL=${ADMIN_EMAIL:-admin@$DOMAIN}
    ADMIN_PASS=${ADMIN_PASS_INPUT:-$(openssl rand -base64 10)}

    sudo mkdir -p "$WEBROOT"
    wget -q https://wordpress.org/latest.tar.gz -O /tmp/latest.tar.gz
    tar -xzf /tmp/latest.tar.gz -C /tmp
    sudo cp -r /tmp/wordpress/* "$WEBROOT"
    sudo chown -R www-data:www-data "$WEBROOT"
    sudo chmod -R 755 "$WEBROOT"

    sudo mariadb -e "CREATE DATABASE $DB_NAME CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
    sudo mariadb -e "CREATE USER '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"
    sudo mariadb -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"
    sudo mariadb -e "FLUSH PRIVILEGES;"

    NGINX_CONF="/etc/nginx/sites-available/$DOMAIN"
    sudo tee "$NGINX_CONF" > /dev/null <<EOL
server {
    listen 80;
    server_name $DOMAIN;
    root $WEBROOT;
    index index.php index.html;

    location / {
        try_files \$uri \$uri/ /index.php?\$args;
    }

    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php$PHP_VERSION-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}
EOL

    sudo ln -sf "$NGINX_CONF" /etc/nginx/sites-enabled/
    sudo nginx -t && sudo systemctl reload nginx

    if ! command -v wp &> /dev/null; then
        curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        chmod +x wp-cli.phar
        sudo mv wp-cli.phar /usr/local/bin/wp
    fi

    sudo -u www-data wp core config --dbname="$DB_NAME" --dbuser="$DB_USER" --dbpass="$DB_PASS" --path="$WEBROOT" --skip-check
    sudo -u www-data wp core install --url="http://$DOMAIN" --title="Website $DOMAIN" --admin_user="$ADMIN_USER" --admin_password="$ADMIN_PASS" --admin_email="$ADMIN_EMAIL" --path="$WEBROOT"
    sudo -u www-data wp plugin install woocommerce wordpress-seo contact-form-7 classic-editor --activate --path="$WEBROOT"

    # Fix: WooCommerce logs permission
    sudo -u www-data mkdir -p "$WEBROOT/wp-content/uploads/wc-logs"
    sudo chmod -R 775 "$WEBROOT/wp-content/uploads/wc-logs"
    sudo chown -R www-data:www-data "$WEBROOT/wp-content/uploads/wc-logs"

    echo ""
    echo "‚úÖ ƒê√£ t·∫°o site http://$DOMAIN"
    echo "üìÅ Webroot: $WEBROOT"
    echo "üõ†Ô∏è DB: $DB_NAME | User: $DB_USER | Pass: $DB_PASS"
    echo "üë§ WP Admin: $ADMIN_USER | M·∫≠t kh·∫©u: $ADMIN_PASS"
}

function delete_site() {
    SITES=($(ls /etc/nginx/sites-available | grep -v "default"))
    [ ${#SITES[@]} -eq 0 ] && echo "‚ùå Kh√¥ng c√≥ site n√†o." && return
    for i in "${!SITES[@]}"; do echo "$((i+1)). ${SITES[$i]}"; done
    read -p "‚ùå Nh·∫≠p s·ªë site mu·ªën xo√°: " INDEX
    INDEX=$((INDEX-1))
    SITE="${SITES[$INDEX]}"
    [ -z "$SITE" ] && echo "‚ùå Kh√¥ng h·ª£p l·ªá." && return
    read -p "B·∫°n ch·∫Øc ch·∫Øn mu·ªën xo√° $SITE? (y/N): " CONFIRM
    [[ "$CONFIRM" != "y" && "$CONFIRM" != "Y" ]] && return
    sudo rm -rf "/var/www/$SITE"
    sudo rm -f "/etc/nginx/sites-available/$SITE" "/etc/nginx/sites-enabled/$SITE"
    DB_NAME="${SITE//./_}_db"
    DB_USER="${SITE//./_}_user"
    sudo mariadb -e "DROP DATABASE IF EXISTS $DB_NAME;"
    sudo mariadb -e "DROP USER IF EXISTS '$DB_USER'@'localhost';"
    sudo nginx -t && sudo systemctl reload nginx
    echo "‚úÖ ƒê√£ xo√° site $SITE"
}

function list_sites() {
    ls /etc/nginx/sites-available | grep -v "default"
}

function restart_services() {
    sudo systemctl restart nginx php$PHP_VERSION-fpm mariadb
    echo "‚úÖ ƒê√£ restart Nginx, PHP-FPM, MariaDB"
}

function clone_site() {
    list_sites
    read -p "üîÅ Nh·∫≠p s·ªë site ngu·ªìn ƒë·ªÉ clone: " SRC_INDEX
    SRC_INDEX=$((SRC_INDEX - 1))
    SITES=($(ls /etc/nginx/sites-available | grep -v "default"))
    SRC_SITE="${SITES[$SRC_INDEX]}"
    [ -z "$SRC_SITE" ] && echo "‚ùå Kh√¥ng h·ª£p l·ªá." && return

    read -p "üÜï Nh·∫≠p domain site m·ªõi: " NEW_SITE
    WEBROOT_NEW="/var/www/$NEW_SITE"
    WEBROOT_SRC="/var/www/$SRC_SITE"

    DB_SRC="${SRC_SITE//./_}_db"
    DB_NEW="${NEW_SITE//./_}_db"
    USER_SRC="${SRC_SITE//./_}_user"
    USER_NEW="${NEW_SITE//./_}_user"
    PASS_NEW=$(openssl rand -base64 12)

    sudo cp -r "$WEBROOT_SRC" "$WEBROOT_NEW"
    sudo chown -R www-data:www-data "$WEBROOT_NEW"

    sudo mariadb -e "CREATE DATABASE $DB_NEW CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
    sudo mariadb -e "CREATE USER '$USER_NEW'@'localhost' IDENTIFIED BY '$PASS_NEW';"
    sudo mariadb -e "GRANT ALL PRIVILEGES ON $DB_NEW.* TO '$USER_NEW'@'localhost';"
    sudo mariadb -e "FLUSH PRIVILEGES;"
    sudo mariadb "$DB_NEW" < <(sudo mariadb-dump "$DB_SRC")

    sudo sed -i "s/'DB_NAME', *'.*'/'DB_NAME', '$DB_NEW'/" "$WEBROOT_NEW/wp-config.php"
    sudo sed -i "s/'DB_USER', *'.*'/'DB_USER', '$USER_NEW'/" "$WEBROOT_NEW/wp-config.php"
    sudo sed -i "s/'DB_PASSWORD', *'.*'/'DB_PASSWORD', '$PASS_NEW'/" "$WEBROOT_NEW/wp-config.php"

    sudo cp "/etc/nginx/sites-available/$SRC_SITE" "/etc/nginx/sites-available/$NEW_SITE"
    sudo sed -i "s/$SRC_SITE/$NEW_SITE/g" "/etc/nginx/sites-available/$NEW_SITE"
    sudo ln -sf "/etc/nginx/sites-available/$NEW_SITE" "/etc/nginx/sites-enabled/"
    sudo nginx -t && sudo systemctl reload nginx

    # WooCommerce log fix
    sudo -u www-data mkdir -p "$WEBROOT_NEW/wp-content/uploads/wc-logs"
    sudo chmod -R 775 "$WEBROOT_NEW/wp-content/uploads/wc-logs"
    sudo chown -R www-data:www-data "$WEBROOT_NEW/wp-content/uploads/wc-logs"

    sudo -u www-data wp option update siteurl "http://$NEW_SITE" --path="$WEBROOT_NEW"
    sudo -u www-data wp option update home "http://$NEW_SITE" --path="$WEBROOT_NEW"

    echo "‚úÖ ƒê√£ clone $SRC_SITE th√†nh $NEW_SITE"
    echo "üåê http://$NEW_SITE"
    echo "üõ†Ô∏è DB: $DB_NEW | User: $USER_NEW | Pass: $PASS_NEW"
}

# === MENU CH√çNH ===
while true; do
    echo ""
    echo "========= WORDPRESS MANAGER ========="
    echo "1. C√†i ƒë·∫∑t LEMP stack"
    echo "2. T·∫°o site WordPress m·ªõi"
    echo "3. Xo√° site WordPress"
    echo "4. Restart d·ªãch v·ª•"
    echo "5. Li·ªát k√™ site"
    echo "6. Clone site WordPress"
    echo "0. Tho√°t"
    echo "====================================="
    read -p "üëâ Nh·∫≠p l·ª±a ch·ªçn: " CHOICE

    case "$CHOICE" in
        1) [ -f "$LEMP_INSTALLED_FLAG" ] && echo "‚úÖ LEMP ƒë√£ c√†i." || install_lemp ;;
        2) add_site ;;
        3) delete_site ;;
        4) restart_services ;;
        5) list_sites ;;
        6) clone_site ;;
        0) echo "üëã Tho√°t."; exit ;;
        *) echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!" ;;
    esac
done
