#!/bin/bash

# ==============================================================================
# Script Qu·∫£n l√Ω WordPress tr√™n RHEL Stack (AlmaLinux)
#
# Phi√™n b·∫£n: 4.5-RHEL (T·ª± ƒë·ªông t·∫°o l·ªánh t·∫Øt 'wpscript')
#
# C√°c t√≠nh nƒÉng ch√≠nh:
# - C√†i ƒë·∫∑t LEMP, t·∫°o/x√≥a/clone/li·ªát k√™ site, c√†i SSL, restart d·ªãch v·ª•.
# - D√πng kho EPEL & Remi, t·ª± ƒë·ªông qu·∫£n l√Ω firewalld.
# - T·ª± ƒë·ªông c·∫•u h√¨nh b·∫£o m·∫≠t MariaDB, t·∫°o v√† l∆∞u m·∫≠t kh·∫©u root.
# - X·ª≠ l√Ω context SELinux t·ª± ƒë·ªông cho webroot v√† socket.
# - T·∫°o FPM Pool v√† user h·ªá th·ªëng ri√™ng cho m·ªói site ƒë·ªÉ tƒÉng c∆∞·ªùng b·∫£o m·∫≠t.
# ==============================================================================

# --- C√ÄI ƒê·∫∂T AN TO√ÄN ---
set -e
set -u
set -o pipefail

# --- BI·∫æN TO√ÄN C·ª§C V√Ä H·∫∞NG S·ªê ---
readonly SCRIPT_NAME="wpscript"
readonly SCRIPT_PATH="/usr/local/bin/${SCRIPT_NAME}"
readonly DEFAULT_PHP_VERSION="8.3"
readonly LEMP_INSTALLED_FLAG="/var/local/lemp_installed_rhel.flag"
readonly WP_CLI_PATH="/usr/local/bin/wp"

# M√†u s·∫Øc cho giao di·ªán
readonly C_RESET='\033[0m'
readonly C_RED='\033[0;31m'
readonly C_GREEN='\033[0;32m'
readonly C_YELLOW='\033[0;33m'
readonly C_BLUE='\033[0;34m'
readonly C_CYAN='\033[0;36m'

# --- H√ÄM TI·ªÜN √çCH ---
info() { echo -e "${C_CYAN}INFO:${C_RESET} $1"; }
warn() { echo -e "${C_YELLOW}WARN:${C_RESET} $1"; }
menu_error() { echo -e "${C_RED}L·ªñI:${C_RESET} $1"; }
fatal_error() { echo -e "${C_RED}L·ªñI NGHI√äM TR·ªåNG:${C_RESET} $1"; exit 1; }
success() { echo -e "${C_GREEN}SUCCESS:${C_RESET} $1"; }

# --- C√ÅC H√ÄM T·ª∞ ƒê·ªòNG C·∫§U H√åNH SCRIPT ---

function create_shortcut_if_needed() {
    # Ki·ªÉm tra xem script c√≥ ƒëang ƒë∆∞·ª£c ch·∫°y v·ªõi sudo kh√¥ng
    if [ "$EUID" -ne 0 ]; then
        fatal_error "Vui l√≤ng ch·∫°y script n√†y v·ªõi quy·ªÅn sudo (v√≠ d·ª•: sudo bash $0)"
    fi

    # Ch·ªâ t·∫°o shortcut n·∫øu n√≥ ch∆∞a t·ªìn t·∫°i
    if [ ! -f "$SCRIPT_PATH" ]; then
        info "T·∫°o l·ªánh t·∫Øt '${SCRIPT_NAME}' ƒë·ªÉ d·ªÖ d√†ng g·ªçi l·∫°i menu..."
        # Copy ch√≠nh file script n√†y v√†o /usr/local/bin
        cp "$0" "$SCRIPT_PATH"
        # C·∫•p quy·ªÅn th·ª±c thi
        chmod +x "$SCRIPT_PATH"
        success "ƒê√£ t·∫°o l·ªánh t·∫Øt th√†nh c√¥ng. T·ª´ l·∫ßn sau, b·∫°n ch·ªâ c·∫ßn g√µ '${SCRIPT_NAME}' ƒë·ªÉ m·ªü menu."
        echo ""
    fi
}


# --- C√ÅC H√ÄM CH·ª®C NƒÇNG CH√çNH ---

function create_swap_if_needed() {
    if sudo swapon --show | grep -q '/'; then
        info "Swap ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t tr√™n h·ªá th·ªëng. B·ªè qua."
        sudo swapon --show
        return
    fi
    warn "Kh√¥ng t√¨m th·∫•y swap. S·∫Ω ti·∫øn h√†nh t·∫°o swap file."
    local total_ram_mb
    total_ram_mb=$(free -m | awk '/^Mem:/{print $2}')
    local swap_size_mb
    swap_size_mb=$((total_ram_mb * 2))
    if [ "$swap_size_mb" -gt 8192 ]; then
        warn "Dung l∆∞·ª£ng RAM l·ªõn, gi·ªõi h·∫°n swap ·ªü m·ª©c 8GB."
        swap_size_mb=8192
    fi
    info "T·ªïng RAM: ${total_ram_mb}MB. S·∫Ω t·∫°o swap file dung l∆∞·ª£ng: ${swap_size_mb}MB."
    sudo fallocate -l "${swap_size_mb}M" /swapfile
    sudo chmod 600 /swapfile
    sudo mkswap /swapfile
    sudo swapon /swapfile
    if ! grep -q "/swapfile" /etc/fstab; then
        echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
    fi
    success "ƒê√£ t·∫°o v√† k√≠ch ho·∫°t swap file th√†nh c√¥ng."
    sudo free -h
}

function install_lemp() {
    info "B·∫Øt ƒë·∫ßu qu√° tr√¨nh c√†i ƒë·∫∑t LEMP stack tr√™n AlmaLinux..."
    create_swap_if_needed
    info "C·∫≠p nh·∫≠t h·ªá th·ªëng..."
    sudo dnf update -y
    if sudo dnf list installed httpd &>/dev/null; then
        warn "Ph√°t hi·ªán httpd (Apache). S·∫Ω ti·∫øn h√†nh g·ª° b·ªè ƒë·ªÉ tr√°nh xung ƒë·ªôt."
        sudo systemctl stop httpd || true && sudo systemctl disable httpd || true
        sudo dnf remove httpd* -y
        success "ƒê√£ g·ª° b·ªè httpd th√†nh c√¥ng."
    fi
    
    info "C√†i ƒë·∫∑t kho l∆∞u tr·ªØ EPEL v√† Remi..."
    sudo dnf install -y epel-release
    sudo dnf install -y https://rpms.remirepo.net/enterprise/remi-release-$(rpm -E %rhel).rpm
    
    info "K√≠ch ho·∫°t module PHP ${DEFAULT_PHP_VERSION} t·ª´ Remi..."
    sudo dnf module reset php -y
    sudo dnf module enable "php:remi-${DEFAULT_PHP_VERSION}" -y

    info "C√†i ƒë·∫∑t Nginx, MariaDB, PHP v√† c√°c extension c·∫ßn thi·∫øt..."
    sudo dnf install -y nginx mariadb-server php php-fpm php-mysqlnd php-curl php-xml php-mbstring php-zip php-gd php-intl php-bcmath php-soap php-pecl-imagick php-exif php-opcache php-cli php-readline wget unzip policycoreutils-python-utils openssl cronie

    info "T·ªëi ∆∞u h√≥a c·∫•u h√¨nh PHP..."
    local php_ini_path="/etc/php.ini"
    if [ -f "$php_ini_path" ]; then
        sudo sed -i 's/^;*upload_max_filesize = .*/upload_max_filesize = 512M/' "$php_ini_path"
        sudo sed -i 's/^;*post_max_size = .*/post_max_size = 512M/' "$php_ini_path"
        sudo sed -i 's/^;*max_execution_time = .*/max_execution_time = 1800/' "$php_ini_path"
        sudo sed -i 's/^;*max_input_time = .*/max_input_time = 1800/' "$php_ini_path"
        sudo sed -i 's/^;*memory_limit = .*/memory_limit = 1024M/' "$php_ini_path"
    fi
    
    info "T·ªëi ∆∞u h√≥a c·∫•u h√¨nh Nginx..."
    local nginx_conf_path="/etc/nginx/nginx.conf"
    sudo sed -i 's/^\s*worker_connections\s*.*/    worker_connections 10240;/' "$nginx_conf_path"
    sudo sed -i 's/^\s*user\s*.*/user nginx;/' "$nginx_conf_path"

    if ! grep -q "client_max_body_size" "$nginx_conf_path"; then
        info "TƒÉng gi·ªõi h·∫°n upload file cho Nginx..."
        sudo sed -i '/http {/a \    client_max_body_size 512M;' "$nginx_conf_path"
    fi

    info "Ki·ªÉm tra v√† c·∫•u h√¨nh t∆∞·ªùng l·ª≠a (firewalld)..."
    if ! command -v firewall-cmd &> /dev/null; then
        warn "firewalld ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. Ti·∫øn h√†nh c√†i ƒë·∫∑t..."
        sudo dnf install -y firewalld
        sudo systemctl enable --now firewalld
        success "firewalld ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t v√† k√≠ch ho·∫°t."
    else
        if ! sudo systemctl is-active --quiet firewalld; then sudo systemctl start firewalld; fi
        info "firewalld ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t. S·∫µn s√†ng c·∫•u h√¨nh."
    fi
    
    sudo firewall-cmd --permanent --add-service=http
    sudo firewall-cmd --permanent --add-service=https
    sudo firewall-cmd --reload

    info "Kh·ªüi ƒë·ªông v√† k√≠ch ho·∫°t c√°c d·ªãch v·ª• ch√≠nh..."
    sudo systemctl enable --now nginx mariadb php-fpm crond

    info "T·ª± ƒë·ªông c·∫•u h√¨nh b·∫£o m·∫≠t MariaDB..."
    local mariadb_root_pass
    mariadb_root_pass=$(openssl rand -base64 16)

    sudo mysql -u root -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('$mariadb_root_pass'); FLUSH PRIVILEGES;"

    sudo tee /root/.my.cnf > /dev/null <<EOL
[client]
user=root
password="$mariadb_root_pass"
EOL
    sudo chmod 600 /root/.my.cnf

    sudo mysql -u root <<EOF
DELETE FROM mysql.user WHERE User='';
DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
DROP DATABASE IF EXISTS test;
DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
FLUSH PRIVILEGES;
EOF
    success "MariaDB ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh b·∫£o m·∫≠t t·ª± ƒë·ªông."
    warn "M·∫≠t kh·∫©u root MariaDB ƒë√£ ƒë∆∞·ª£c t·∫°o v√† l∆∞u v√†o /root/.my.cnf"
    echo -e "${C_YELLOW}üîë M·∫≠t kh·∫©u root MariaDB c·ªßa b·∫°n l√†:${C_RESET} ${mariadb_root_pass}"
    echo -e "${C_YELLOW}Vui l√≤ng l∆∞u l·∫°i m·∫≠t kh·∫©u n√†y ·ªü n∆°i an to√†n!${C_RESET}"
    
    sudo touch "$LEMP_INSTALLED_FLAG"
    success "C√†i ƒë·∫∑t LEMP stack ho√†n t·∫•t!"
}

function create_site() {
    info "B·∫Øt ƒë·∫ßu t·∫°o site WordPress m·ªõi..."
    read -p "Nh·∫≠p domain (v√≠ d·ª•: mydomain.com): " domain
    if [ -z "$domain" ]; then fatal_error "Domain kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng."; fi
    
    local webroot="/var/www/$domain"
    local site_user="$domain"
    
    if ! id -u "$site_user" >/dev/null 2>&1; then
        info "T·∫°o user h·ªá th·ªëng '$site_user' cho site..."
        sudo useradd -r -s /sbin/nologin -d "$webroot" -g nginx "$site_user"
    else
        warn "User '$site_user' ƒë√£ t·ªìn t·∫°i. S·∫Ω s·ª≠ d·ª•ng user n√†y."
    fi
    
    local random_suffix
    random_suffix=$(openssl rand -hex 4)
    local safe_domain
    safe_domain=$(echo "${domain//./_}")
    
    local db_name; db_name=$(echo "${safe_domain}" | cut -c -55)_${random_suffix}
    local db_user; db_user=$(echo "${safe_domain}" | cut -c -23)_u${random_suffix}
    
    local db_pass; db_pass=$(openssl rand -base64 12)
    read -p "Nh·∫≠p t√™n t√†i kho·∫£n admin WordPress (m·∫∑c ƒë·ªãnh: admin): " admin_user
    read -p "Nh·∫≠p email admin WordPress (m·∫∑c ƒë·ªãnh: admin@$domain): " admin_email
    read -s -p "Nh·∫≠p m·∫≠t kh·∫©u admin WordPress (Enter ƒë·ªÉ t·∫°o ng·∫´u nhi√™n): " admin_pass_input; echo
    local admin_user=${admin_user:-admin}
    local admin_email=${admin_email:-admin@$domain}
    local admin_pass=${admin_pass_input:-$(openssl rand -base64 10)}
    
    info "T·∫£i v√† c√†i ƒë·∫∑t m√£ ngu·ªìn WordPress..."
    sudo mkdir -p "$webroot"
    wget -q https://wordpress.org/latest.tar.gz -O /tmp/latest.tar.gz
    tar -xzf /tmp/latest.tar.gz -C /tmp && sudo cp -r /tmp/wordpress/* "$webroot" && sudo chown -R "$site_user":nginx "$webroot"
    
    info ">> SELinux: G√°n context cho webroot..."
    sudo semanage fcontext -a -t httpd_sys_rw_content_t "$webroot(/.*)?"
    sudo restorecon -R "$webroot"

    info "T·∫°o Database v√† User..."
    sudo mysql -e "CREATE DATABASE IF NOT EXISTS \`$db_name\` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
    sudo mysql -e "CREATE USER IF NOT EXISTS \`$db_user\`@'localhost' IDENTIFIED BY '$db_pass';"
    sudo mysql -e "GRANT ALL PRIVILEGES ON \`$db_name\`.* TO \`$db_user\`@'localhost';"
    sudo mysql -e "FLUSH PRIVILEGES;"
    
    info "T·∫°o file c·∫•u h√¨nh Nginx..."
    local nginx_conf="/etc/nginx/conf.d/$domain.conf"
    local fpm_sock="/var/run/php-fpm/${domain}.sock"
    sudo tee "$nginx_conf" > /dev/null <<EOL
server {
    listen 80;
    server_name $domain www.$domain;
    root $webroot;
    index index.php index.html;
    location / { try_files \$uri \$uri/ /index.php?\$args; }
    location ~ \.php\$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        fastcgi_pass unix:$fpm_sock;
    }
    location ~ /\.ht { deny all; }
}
EOL

    info "T·∫°o FPM Pool ri√™ng cho site..."
    local pool_conf="/etc/php-fpm.d/${domain}.conf"
    sudo tee "$pool_conf" > /dev/null <<EOL
[$domain]
user = $site_user
group = nginx
listen = $fpm_sock
listen.
